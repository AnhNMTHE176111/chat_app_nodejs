name: Docker Image CI

on:
  push:
    branches: ["tuananh_test", "develop"]
  pull_request:
    branches: ["tuananh_test", "develop"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Create .env.production file
        run: echo "${{ secrets.ENV_PRODUCTION }}" > .env.production

      - name: Build New Image
        run: docker-compose -f docker-compose.yml -f docker-compose.production.yml build chat_app

      - name: Push Image to DockerHub
        run: docker-compose -f docker-compose.yml -f docker-compose.production.yml push chat_app

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull new code and run Docker
        run: |
          echo "${{ secrets.EC2_SECRET_KEY_PEM }}" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'

            cd ~/project/chat_app_nodejs
            echo "${{ secrets.ENV_PRODUCTION }}" > ~/project/chat_app_nodejs/.env.production

            git pull origin tuananh_test
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            docker compose -f docker-compose.yml -f docker-compose.production.yml pull
            docker compose -f docker-compose.yml -f docker-compose.production.yml up -d --no-deps chat_app
          EOF
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
